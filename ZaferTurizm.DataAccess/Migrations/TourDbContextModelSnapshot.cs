// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZaferTurizm.DataAccess;

#nullable disable

namespace ZaferTurizm.DataAccess.Migrations
{
    [DbContext(typeof(TourDbContext))]
    partial class TourDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ZaferTurizm.Domain.Bilet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("HumanId")
                        .HasColumnType("int");

                    b.Property<int>("KoltukNumarası")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int>("SeferId")
                        .HasColumnType("int");

                    b.Property<int>("SeferNumara")
                        .HasColumnType("int");

                    b.Property<DateTime>("VerildigiTarihi")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("HumanId");

                    b.HasIndex("SeferId");

                    b.ToTable("Bilet", (string)null);
                });

            modelBuilder.Entity("ZaferTurizm.Domain.HumanInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("BirhtDay")
                        .HasColumnType("datetime2");

                    b.Property<int>("Cinsiyet")
                        .HasColumnType("int");

                    b.Property<string>("Kimlik")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("HumanInformation", (string)null);
                });

            modelBuilder.Entity("ZaferTurizm.Domain.OtobusSefer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("money");

                    b.Property<int>("RotaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2(0)");

                    b.Property<int>("VehicleDefintionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RotaId");

                    b.HasIndex("VehicleDefintionId");

                    b.ToTable("OtobusSefer", (string)null);
                });

            modelBuilder.Entity("ZaferTurizm.Domain.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Provinces", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Adana"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Adıyaman"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Afyon"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Ağrı"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Aksaray"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Amasya"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Ankara"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Antalya"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Ardahan"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Artvin"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Aydın"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Balıkesir"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Bartın"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Batman"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Bayburt"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Bilecik"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Bingöl"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Bitlis"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Bolu"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Burdur"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Bursa"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Çanakkale"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Çankırı"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Çorum"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Denizli"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Diyarbakır"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Düzce"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Edirne"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Elazığ"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Erzincan"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Erzurum"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Eskişehir"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Gaziantep"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Giresun"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Gümüşhane"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Hakkari"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Hatay"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Iğdır"
                        },
                        new
                        {
                            Id = 39,
                            Name = "Isparta"
                        },
                        new
                        {
                            Id = 40,
                            Name = "İstanbul"
                        },
                        new
                        {
                            Id = 41,
                            Name = "İzmir"
                        },
                        new
                        {
                            Id = 42,
                            Name = "Kahramanmaraş"
                        },
                        new
                        {
                            Id = 43,
                            Name = "Karabük"
                        },
                        new
                        {
                            Id = 44,
                            Name = "Karaman"
                        },
                        new
                        {
                            Id = 45,
                            Name = "Kars"
                        },
                        new
                        {
                            Id = 46,
                            Name = "Kastamonu"
                        },
                        new
                        {
                            Id = 47,
                            Name = "Kayseri"
                        },
                        new
                        {
                            Id = 48,
                            Name = "Kırıkkale"
                        },
                        new
                        {
                            Id = 49,
                            Name = "Kırklareli"
                        },
                        new
                        {
                            Id = 50,
                            Name = "Kırşehir"
                        },
                        new
                        {
                            Id = 51,
                            Name = "Kilis"
                        },
                        new
                        {
                            Id = 52,
                            Name = "Kocaeli"
                        },
                        new
                        {
                            Id = 53,
                            Name = "Konya"
                        },
                        new
                        {
                            Id = 54,
                            Name = "Kütahya"
                        },
                        new
                        {
                            Id = 55,
                            Name = "Malatya"
                        },
                        new
                        {
                            Id = 56,
                            Name = "Manisa"
                        },
                        new
                        {
                            Id = 57,
                            Name = "Mardin"
                        },
                        new
                        {
                            Id = 58,
                            Name = "Mersin"
                        },
                        new
                        {
                            Id = 59,
                            Name = "Muğla"
                        },
                        new
                        {
                            Id = 60,
                            Name = "Muş"
                        },
                        new
                        {
                            Id = 61,
                            Name = "Nevşehir"
                        },
                        new
                        {
                            Id = 62,
                            Name = "Niğde"
                        },
                        new
                        {
                            Id = 63,
                            Name = "Ordu"
                        },
                        new
                        {
                            Id = 64,
                            Name = "Osmaniye"
                        },
                        new
                        {
                            Id = 65,
                            Name = "Rize"
                        },
                        new
                        {
                            Id = 66,
                            Name = "Sakarya"
                        },
                        new
                        {
                            Id = 67,
                            Name = "Samsun"
                        },
                        new
                        {
                            Id = 68,
                            Name = "Siirt"
                        },
                        new
                        {
                            Id = 69,
                            Name = "Sinop"
                        },
                        new
                        {
                            Id = 70,
                            Name = "Sivas"
                        },
                        new
                        {
                            Id = 71,
                            Name = "Şanlıurfa"
                        },
                        new
                        {
                            Id = 72,
                            Name = "Şırnak"
                        },
                        new
                        {
                            Id = 73,
                            Name = "Tekirdağ"
                        },
                        new
                        {
                            Id = 74,
                            Name = "Tokat"
                        },
                        new
                        {
                            Id = 75,
                            Name = "Trabzon"
                        },
                        new
                        {
                            Id = 76,
                            Name = "Tunceli"
                        },
                        new
                        {
                            Id = 77,
                            Name = "Uşak"
                        },
                        new
                        {
                            Id = 78,
                            Name = "Van"
                        },
                        new
                        {
                            Id = 79,
                            Name = "Yalova"
                        },
                        new
                        {
                            Id = 80,
                            Name = "Yozgat"
                        },
                        new
                        {
                            Id = 81,
                            Name = "Zonguldak"
                        });
                });

            modelBuilder.Entity("ZaferTurizm.Domain.Rota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DonusId")
                        .HasColumnType("int");

                    b.Property<int>("GidisId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DonusId");

                    b.HasIndex("GidisId");

                    b.ToTable("Rota", (string)null);
                });

            modelBuilder.Entity("ZaferTurizm.Domain.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("VehicleDefintionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleDefintionId");

                    b.ToTable("Vehicle", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PlateNumber = "34 ABC 123",
                            VehicleDefintionId = 1
                        },
                        new
                        {
                            Id = 2,
                            PlateNumber = "34 CDE 654",
                            VehicleDefintionId = 1
                        },
                        new
                        {
                            Id = 3,
                            PlateNumber = "34 QWE 345",
                            VehicleDefintionId = 2
                        },
                        new
                        {
                            Id = 4,
                            PlateNumber = "34 ZXC 987",
                            VehicleDefintionId = 3
                        });
                });

            modelBuilder.Entity("ZaferTurizm.Domain.VehicleDefintion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("HasTailet")
                        .HasColumnType("bit");

                    b.Property<bool>("HasWifi")
                        .HasColumnType("bit");

                    b.Property<int>("SeatCount")
                        .HasColumnType("int");

                    b.Property<int>("VehicleModelId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleModelId");

                    b.ToTable("VehicleDefintion", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HasTailet = false,
                            HasWifi = true,
                            SeatCount = 48,
                            VehicleModelId = 1,
                            Year = 2020
                        },
                        new
                        {
                            Id = 2,
                            HasTailet = false,
                            HasWifi = true,
                            SeatCount = 48,
                            VehicleModelId = 1,
                            Year = 2021
                        },
                        new
                        {
                            Id = 3,
                            HasTailet = false,
                            HasWifi = false,
                            SeatCount = 52,
                            VehicleModelId = 5,
                            Year = 2019
                        });
                });

            modelBuilder.Entity("ZaferTurizm.Domain.VehicleMake", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("VehicleMake", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mercedes"
                        },
                        new
                        {
                            Id = 2,
                            Name = "MAN"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Neoplan"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Otokar"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Volvo"
                        });
                });

            modelBuilder.Entity("ZaferTurizm.Domain.VehicleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("VehicleMakeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleMakeId");

                    b.ToTable("VehicleModel", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Travego",
                            VehicleMakeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "403",
                            VehicleMakeId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Tourismo",
                            VehicleMakeId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Lions",
                            VehicleMakeId = 2
                        },
                        new
                        {
                            Id = 5,
                            Name = "Fortuna",
                            VehicleMakeId = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "SL",
                            VehicleMakeId = 2
                        });
                });

            modelBuilder.Entity("ZaferTurizm.Domain.Bilet", b =>
                {
                    b.HasOne("ZaferTurizm.Domain.HumanInformation", "Kisi")
                        .WithMany()
                        .HasForeignKey("HumanId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ZaferTurizm.Domain.OtobusSefer", "SeferBilgisi")
                        .WithMany()
                        .HasForeignKey("SeferId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Kisi");

                    b.Navigation("SeferBilgisi");
                });

            modelBuilder.Entity("ZaferTurizm.Domain.OtobusSefer", b =>
                {
                    b.HasOne("ZaferTurizm.Domain.Rota", "rota")
                        .WithMany()
                        .HasForeignKey("RotaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ZaferTurizm.Domain.VehicleDefintion", "vehicleDefintion")
                        .WithMany()
                        .HasForeignKey("VehicleDefintionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("rota");

                    b.Navigation("vehicleDefintion");
                });

            modelBuilder.Entity("ZaferTurizm.Domain.Rota", b =>
                {
                    b.HasOne("ZaferTurizm.Domain.Province", "DonusProvince")
                        .WithMany()
                        .HasForeignKey("DonusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ZaferTurizm.Domain.Province", "GidisProvince")
                        .WithMany()
                        .HasForeignKey("GidisId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("DonusProvince");

                    b.Navigation("GidisProvince");
                });

            modelBuilder.Entity("ZaferTurizm.Domain.Vehicle", b =>
                {
                    b.HasOne("ZaferTurizm.Domain.VehicleDefintion", "VehicleDefintion")
                        .WithMany()
                        .HasForeignKey("VehicleDefintionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("VehicleDefintion");
                });

            modelBuilder.Entity("ZaferTurizm.Domain.VehicleDefintion", b =>
                {
                    b.HasOne("ZaferTurizm.Domain.VehicleModel", "VehicleModel")
                        .WithMany()
                        .HasForeignKey("VehicleModelId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("VehicleModel");
                });

            modelBuilder.Entity("ZaferTurizm.Domain.VehicleModel", b =>
                {
                    b.HasOne("ZaferTurizm.Domain.VehicleMake", "VehicleMake")
                        .WithMany()
                        .HasForeignKey("VehicleMakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleMake");
                });
#pragma warning restore 612, 618
        }
    }
}
